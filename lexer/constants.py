table_of_language_tokens = {
    "true": "boolean",
    "false": "boolean",
    "program": "keyword",
    "var": "keyword",
    "begin": "keyword",
    "end": "keyword",
    "end.": "keyword",
    "integer": "keyword",
    "real": "keyword",
    "boolean": "keyword",
    "read": "keyword",
    "write": "keyword",
    "for": "keyword",
    "if": "keyword",
    "=": "assign_op",
    "+": "add_op",
    "-": "add_op",
    "*": "mult_op",
    "^": "pow_op",
    "/": "mult_op",
    "<": "rel_op",
    "<=": "rel_op",
    "==": "rel_op",
    ">=": "rel_op",
    ">": "rel_op",
    "!=": "rel_op",
    "(": "brackets_op",
    ")": "brackets_op",
    ".": "dot",
    ",": "comma",
    ":": "colon_op",
    ";": "op_end",
    "?": "question_op",
    " ": "ws",
    "e": "exp_op",
    "\t": "ws",
    "\n": "eol",
    "\r": "eol",
    "\n\r": "eol",
    "\r\b": "eol",
}

# Таблица ідентифікаторів та констант
table_ident_float_int = {6: "ident", 10: "real", 13: "real", 8: "integer"}

classes = {
    "Letter": "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_",
    "Operators": "+*()/-,=<>;!^",
    "Digit": "0123456789",
    "Dot": ".",
    "ExpOp": "e",
    "ColonOp": ":",
    "QuestionOp": "?",
    "Newline": "\n",
    "WhiteSep": " \t",
}

# δ - state-transition functions
stf = {
    (0, "WhiteSep"): 0,
    (0, "Letter"): 3,
    (3, "Letter"): 3,
    (3, "Digit"): 3,
    (3, "other"): 6,
    (3, "Dot"): 4,
    (4, "other"): 5,
    (0, "Digit"): 7,
    (7, "Digit"): 7,
    (7, "other"): 8,
    (7, "Dot"): 9,
    (9, "Digit"): 9,
    (9, "other"): 10,
    (9, "ExpOp"): 11,
    (11, "-"): 111,
    (11, "+"): 111,
    (11, "other"): 103,
    (111, "Digit"): 12,
    (12, "Digit"): 12,
    (12, "other"): 13,
    (0, "!"): 17,
    (17, "="): 18,
    (17, "other"): 102,
    (0, "="): 14,
    (0, ">"): 14,
    (0, "<"): 14,
    (14, "="): 16,
    (14, "other"): 15,
    (0, "+"): 1,
    (0, "*"): 1,
    (0, ")"): 1,
    (0, "("): 1,
    (0, "/"): 1,
    (0, "-"): 1,
    (0, "^"): 1,
    (0, ";"): 1,
    (0, "ColonOp"): 1,
    (0, "QuestionOp"): 1,
    (0, "Newline"): 2,
    (0, "other"): 101,
}

states = {
    "initial": (0,),
    "star": (5, 6, 8, 10, 13),
    "errors": (101, 102, 103),
    "final": (
        1,
        2,
        5,
        6,
        8,
        10,
        13,
        15,
        16,
        18,
        101,
        102,
        103
    ),
    "newLine": (2,),
    "operators": (1, 14, 15, 16, 18),
    "double_operators": (18, 16),
    "const": (8, 10, 13),
    "identifier": (6, 5),
}

errors_states = {
    101: "LexerError: у рядку {} отримав неочікуваний символ {}",
    102: "LexerError: у рядку {} очікувався символ =, отримав {}",
    103: "LexerError: у рядку {} очікувався символ + або -, отримав {}",
}

type_mapping = {
    "integer": int,
    "real": float,
    "boolean": bool,
    "true": True,
    "false": False,
}